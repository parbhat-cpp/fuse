/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AppSubscriptionRouteImport } from './routes/app/subscription'
import { Route as AppSettingsRouteImport } from './routes/app/settings'
import { Route as AppRoomsRouteImport } from './routes/app/rooms'
import { Route as AppFriendsRouteImport } from './routes/app/friends'
import { Route as AuthCallbackIndexRouteImport } from './routes/auth/callback/index'

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const AppSubscriptionRoute = AppSubscriptionRouteImport.update({
  id: '/subscription',
  path: '/subscription',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppRoomsRoute = AppRoomsRouteImport.update({
  id: '/rooms',
  path: '/rooms',
  getParentRoute: () => AppRoute,
} as any)
const AppFriendsRoute = AppFriendsRouteImport.update({
  id: '/friends',
  path: '/friends',
  getParentRoute: () => AppRoute,
} as any)
const AuthCallbackIndexRoute = AuthCallbackIndexRouteImport.update({
  id: '/auth/callback/',
  path: '/auth/callback/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/friends': typeof AppFriendsRoute
  '/app/rooms': typeof AppRoomsRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/subscription': typeof AppSubscriptionRoute
  '/app/': typeof AppIndexRoute
  '/auth/callback': typeof AuthCallbackIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app/friends': typeof AppFriendsRoute
  '/app/rooms': typeof AppRoomsRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/subscription': typeof AppSubscriptionRoute
  '/app': typeof AppIndexRoute
  '/auth/callback': typeof AuthCallbackIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/friends': typeof AppFriendsRoute
  '/app/rooms': typeof AppRoomsRoute
  '/app/settings': typeof AppSettingsRoute
  '/app/subscription': typeof AppSubscriptionRoute
  '/app/': typeof AppIndexRoute
  '/auth/callback/': typeof AuthCallbackIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/friends'
    | '/app/rooms'
    | '/app/settings'
    | '/app/subscription'
    | '/app/'
    | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app/friends'
    | '/app/rooms'
    | '/app/settings'
    | '/app/subscription'
    | '/app'
    | '/auth/callback'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/friends'
    | '/app/rooms'
    | '/app/settings'
    | '/app/subscription'
    | '/app/'
    | '/auth/callback/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthCallbackIndexRoute: typeof AuthCallbackIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/subscription': {
      id: '/app/subscription'
      path: '/subscription'
      fullPath: '/app/subscription'
      preLoaderRoute: typeof AppSubscriptionRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/settings': {
      id: '/app/settings'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/rooms': {
      id: '/app/rooms'
      path: '/rooms'
      fullPath: '/app/rooms'
      preLoaderRoute: typeof AppRoomsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/friends': {
      id: '/app/friends'
      path: '/friends'
      fullPath: '/app/friends'
      preLoaderRoute: typeof AppFriendsRouteImport
      parentRoute: typeof AppRoute
    }
    '/auth/callback/': {
      id: '/auth/callback/'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AppRouteChildren {
  AppFriendsRoute: typeof AppFriendsRoute
  AppRoomsRoute: typeof AppRoomsRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppSubscriptionRoute: typeof AppSubscriptionRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppFriendsRoute: AppFriendsRoute,
  AppRoomsRoute: AppRoomsRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppSubscriptionRoute: AppSubscriptionRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthCallbackIndexRoute: AuthCallbackIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
